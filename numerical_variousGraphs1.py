# -*- coding: utf-8 -*-
"""histogram_categoricalVars.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U0FF9ra3FC11hivnJUZTpAXKnuiLFExH
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import ast
import os
#

path_train = input("Paste path to the training data and press enter (without the '' marks), e.g. /content/drive/MyDrive/Kaggle/kaggle_data/train.csv: ").strip()
path_column_types = input("Paste path to the table with column types and press enter (without the '' marks), e.g. /content/drive/MyDrive/Kaggle/kaggle_data/test.csv: ").strip()
target_name = input("Enter the name of the target column and press enter (without the '' marks), e.g. loan_status").strip()
data_train = pd.read_csv(path_train)
column_types_table_input = pd.read_csv(path_column_types, index_col=0)

# Create an EDA folder if it doesn't exist
def create_eda_folder():
    current_dir = os.getcwd()

    eda_folder_path = os.path.join(current_dir, 'EDA')
    if not os.path.exists(eda_folder_path):
        os.makedirs(eda_folder_path)

def numericalVars_variousGraphs1(train, column_types_table, target):

# create a dictionary to make a variable name of the plots & plot subplots as a consequence
  numerical_cols = ast.literal_eval(column_types_table.loc['numerical'].iloc[0])
  identifier_cols = ast.literal_eval(column_types_table.loc['identifier'].iloc[0])
  numerical_cols = list(set(numerical_cols)-set(identifier_cols)-set([target]))
  plot_keys = train[numerical_cols].columns.tolist()
  addText = "_ax"
  plot_vals = [str(i)+addText for i in plot_keys]
  plot_dict=dict(zip(plot_keys, plot_vals))
  text_dict = plot_dict.copy()
  hist_dict = plot_dict.copy()
  uni_box_dict = plot_dict.copy()
  box_dict = plot_dict.copy()
  violin_dict = plot_dict.copy()



  width_param =1
  fig, axs = plt.subplots(nrows=train[numerical_cols].shape[1], ncols=5, squeeze=False, gridspec_kw={'width_ratios': [1, width_param, width_param, width_param, width_param]}) # adjusts the size of subplots within the plot
  fig.set_size_inches(w=15, h=30)

  # Adjust spacing
  plt.subplots_adjust(#left=0.1, right=0.9,
                      #top=0.9, bottom=0.5,
                      wspace=0.4, hspace=0.6)

  for c in train[numerical_cols].columns:
    col=[c]
    idx=plot_keys.index(c)

    text_dict[c]=axs[idx,0].text(0.1, 0.5, c, dict(size=10), verticalalignment='center') # graph with text which is variable name

    hist_dict[c]=sns.histplot(data=train, x=c, ax=axs[idx][1])
    hist_dict[c].title.set_text('Univariate - histogram')
    uni_box_dict[c]=sns.boxplot(data=train[c], ax=axs[idx][2])
    uni_box_dict[c].title.set_text('Univariate - box plot')
    box_dict[c]=sns.boxplot(x=target, y=c, data=train, hue=target, ax=axs[idx][3])
    box_dict[c].title.set_text('Box Plot')
    violin_dict[c]=sns.violinplot(x=target, y=c,  data=train, hue=target, ax=axs[idx][4])
    violin_dict[c].title.set_text('Violin Plot')

plot_to_save = numericalVars_variousGraphs1(train=data_train, column_types_table=column_types_table_input, target=target_name)
create_eda_folder()
file_name = 'allNumerical_variousGraphs.png'
eda_folder_path = os.path.join(os.getcwd(), 'EDA')

file_path = os.path.join(eda_folder_path, file_name)
#with open(file_path, 'w', encoding = 'utf-8-sig') as f:
plt.savefig(file_path)

#plot_to_save
text_to_display = 'File name: '+file_name[:-4] +'. '+'This is also saved in the EDA folder'
print(text_to_display)
